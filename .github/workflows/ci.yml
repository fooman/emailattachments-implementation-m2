name: Continous Integration
on: [push, pull_request]

jobs:
  performance:
    name: WIP Performance Testing
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
        name: Checkout files

      - name: Get composer cache directory
        id: composer-cache
        run: "echo \"::set-output name=dir::$(composer config cache-dir)\""

      - name: Cache dependencies
        uses: actions/cache@v1
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: ${{ runner.os }}-composer-

      - name: Setup Composer Access
        run: composer config -a -g http-basic.repo.magento.com ${{ secrets.REPO_MAGENTO_USERNAME }} ${{ secrets.REPO_MAGENTO_PASSWORD }}

      - name: Start docker-compose
        run: docker-compose -f .github/workflows/docker-compose.yml up -d

      - name: Check running containers
        run: docker ps -a

      - name: Composer install
        uses: extdn/github-actions-m2/install-m2-from-mirror@master
        with:
          ce-version: 2.3.5

      - name: Run Blackfire
        run: docker-compose -f .github/workflows/docker-compose.yml exec -e BLACKFIRE_CLIENT_ID=${{ secrets.BLACKFIRE_CLIENT_ID }} -e BLACKFIRE_CLIENT_TOKEN=${{ secrets.BLACKFIRE_CLIENT_TOKEN }} -e BLACKFIRE_SERVER_ID=${{ secrets.BLACKFIRE_SERVER_ID }} -e BLACKFIRE_SERVER_TOKEN=${{ secrets.BLACKFIRE_SERVER_TOKEN }} blackfire --json curl http://magento2.test/

  static:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - uses: extdn/github-actions-m2/magento-coding-standard@master

  phpmd:
    name: Magento 2 - Phpmd
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - uses: extdn/github-actions-m2/magento-mess-detector@master

  integration:
    name: Static Code Analysis
    runs-on: ubuntu-latest
    container:
      image: duhon/php:7.3-alpine

    services:
      mysql:
        image: mysql:5.7
        env:
          MYSQL_ROOT_PASSWORD: password
          MYSQL_DATABASE: magento2
        ports:
          - 3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3

    steps:
      - uses: actions/checkout@v1
        with:
          fetch-depth: 1
      #- uses: extdn/github-actions-m2/install-m2-from-mirror@master
      #  with:
      #    ce-version: 2.3.3