name: Continous Integration
on: [push, pull_request]

jobs:
  performance:
    name: WIP Performance Testing
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
        name: Checkout files
        with:
          path: extension

      - name: Ensure Nginx Document Root exists
        run: mkdir -p ${{ github.workspace }}/m2

      - name: Get composer cache directory
        id: composer-cache
        run: "echo \"::set-output name=dir::$(composer config cache-dir)\""
        working-directory: ./extension

      - name: Cache dependencies
        uses: actions/cache@v1
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: ${{ runner.os }}-composer-

      - name: Start docker-compose
        run: docker-compose -f ./extension/.github/workflows/performance/docker-compose.yml up -d

      - name: Docker output
        run: docker-compose -f ./extension/.github/workflows/performance/docker-compose.yml ps && docker inspect $(docker-compose -f ./extension/.github/workflows/performance/docker-compose.yml ps -q blackfire-agent && docker inspect $(docker-compose -f ./extension/.github/workflows/performance/docker-compose.yml ps -q nginx && docker-compose -f ./extension/.github/workflows/performance/docker-compose.yml logs nginx)

      - name: Composer install
        run: >-
            composer create-project --repository=https://repo-magento-mirror.fooman.co.nz/ magento/project-community-edition:2.3.5 ${{ github.workspace }}/m2 --no-install --no-interaction
            && cd ${{ github.workspace }}/m2
            && composer config platform.php 7.3
            && composer config --unset repo.0
            && composer config repo.foomanmirror composer https://repo-magento-mirror.fooman.co.nz/
            && composer install --prefer-dist
        working-directory: ./m2

      - name: Install Magento
        run: >-
          docker-compose -f ./extension/.github/workflows/performance/docker-compose.yml exec -T php-fpm
          bash -c 'cd /var/www/html/m2 && sudo chown www-data: -R /var/www/html/m2 && ls -al && id
          && php -f bin/magento setup:install --base-url=http://magento2.test/ --backend-frontname=admin --db-host=mysql --db-name=magento_performance_tests --db-user=root --db-password=123123q --admin-user=admin@example.com --admin-password=password1 --admin-email=admin@example.com --admin-firstname=firstname --admin-lastname=lastname'

      - name: Generate Performance Fixtures
        run: >-
          docker-compose -f ./extension/.github/workflows/performance/docker-compose.yml exec -T php-fpm
          bash -c 'cd /var/www/html/m2
          && php -f bin/magento setup:performance:generate-fixtures setup/performance-toolkit/profiles/ce/small.xml'

      - name: Run Blackfire
        run: docker-compose -f ./extension/.github/workflows/performance/docker-compose.yml run -e BLACKFIRE_CLIENT_ID=${{ secrets.BLACKFIRE_CLIENT_ID }} -e BLACKFIRE_CLIENT_TOKEN=${{ secrets.BLACKFIRE_CLIENT_TOKEN }} -e BLACKFIRE_SERVER_ID=${{ secrets.BLACKFIRE_SERVER_ID }} -e BLACKFIRE_SERVER_TOKEN=${{ secrets.BLACKFIRE_SERVER_TOKEN }} blackfire-agent blackfire --json curl http://magento2.test/ -v=4

  static:
    name: M2 Coding Standard
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: extdn/github-actions-m2/magento-coding-standard@master

  phpmd:
    name: M2 Mess Detector
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: extdn/github-actions-m2/magento-mess-detector@master

  phpstan:
    name: M2 PhpStan
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: extdn/github-actions-m2/magento-phpstan@master

  integration:
    name: WIP Integration Tests
    runs-on: ubuntu-latest
    container:
      image: duhon/php:7.3-alpine

    services:
      mysql:
        image: mysql:5.7
        env:
          MYSQL_ROOT_PASSWORD: password
          MYSQL_DATABASE: magento2
        ports:
          - 3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3

    steps:
      - uses: actions/checkout@v2

      #- uses: extdn/github-actions-m2/install-m2-from-mirror@master
      #  with:
      #    ce-version: 2.3.3