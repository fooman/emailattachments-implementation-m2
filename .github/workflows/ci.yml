name: Continous Integration
on: [push, pull_request]

jobs:
  performance:
    name: M2 Performance Testing
    runs-on: ubuntu-latest
    env:
      DOCKER_COMPOSE_FILE: "./extension/.github/workflows/performance/docker-compose.yml"
      EXTENSION_NAME: "Fooman_EmailAttachments"
      EXTENSION_PACKAGE_NAME: "fooman/emailattachments-implementation-m2"

    steps:
      - uses: actions/checkout@v2
        name: Checkout files
        with:
          path: extension

      - name: Get composer cache directory
        id: composer-cache
        run: "echo \"::set-output name=dir::$(composer config cache-dir)\""
        working-directory: ./extension

      - name: Cache dependencies
        uses: actions/cache@v1
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: ${{ runner.os }}-composer-

      - uses: extdn/github-actions-m2/magento-performance@master
        with:
          extension-name: ${{ env.EXTENSION_NAME }}
          extension-package-name: ${{ env.EXTENSION_PACKAGE_NAME }}
        env:
          BLACKFIRE_CLIENT_ID: ${{ secrets.BLACKFIRE_CLIENT_ID }}
          BLACKFIRE_CLIENT_TOKEN: ${{ secrets.BLACKFIRE_CLIENT_TOKEN }}
          BLACKFIRE_SERVER_ID: ${{ secrets.BLACKFIRE_SERVER_ID }}
          BLACKFIRE_SERVER_TOKEN: ${{ secrets.BLACKFIRE_SERVER_TOKEN }}

      - name: Extract Info from Result
        id: blackfire-profile
        run: |
          echo "##[set-output name=id;]$(cat ${{ github.workspace }}/baseline.json | jq '.id')"
          echo "##[set-output name=url;]$(cat ${{ github.workspace }}/baseline.json | jq '._links.graph_url.href')"
          echo "##[set-output name=time;]$(cat ${{ github.workspace }}/baseline.json | jq '.envelope.wt')"
          echo "##[set-output name=memory;]$(cat ${{ github.workspace }}/baseline.json | jq '.envelope.pmu')"
          echo "##[set-output name=queries;]$(cat ${{ github.workspace }}/baseline.json | jq '.arguments[.arguments | keys[0]][ .arguments[.arguments | keys[0]] | keys[0]].ct')"

      - name: Install Extension
        run: >-
          docker-compose -f ${{ env.DOCKER_COMPOSE_FILE }} exec -e EXTENSION_BRANCH=${GITHUB_REF#refs/heads/} -T php-fpm
          bash -c 'cd /var/www/html/m2
          && php -f vendor/composer/composer/bin/composer config repo.extension path /var/www/html/extension
          && php -f vendor/composer/composer/bin/composer require ${{ env.EXTENSION_PACKAGE_NAME }}:dev-$EXTENSION_BRANCH#${{ github.sha }}
          && php -f bin/magento module:enable ${{ env.EXTENSION_NAME }}
          && php -f bin/magento setup:upgrade
          && php -f bin/magento cache:enable
          && php -f bin/magento cache:disable block_html full_page'

      - name: Run Blackfire Again
        id: blackfire-after
        run: docker-compose -f ${{ env.DOCKER_COMPOSE_FILE }} run blackfire-agent blackfire --json  --reference=${{ steps.blackfire-profile.outputs.id}} curl http://magento2.test/category-1/category-1-1.html > ${{ github.workspace }}/after.json
        env:
          BLACKFIRE_CLIENT_ID: ${{ secrets.BLACKFIRE_CLIENT_ID }}
          BLACKFIRE_CLIENT_TOKEN: ${{ secrets.BLACKFIRE_CLIENT_TOKEN }}
          BLACKFIRE_SERVER_ID: ${{ secrets.BLACKFIRE_SERVER_ID }}
          BLACKFIRE_SERVER_TOKEN: ${{ secrets.BLACKFIRE_SERVER_TOKEN }}

      - name: Extract Info from Result
        id: blackfire-profile-after
        run: |
          echo "##[set-output name=id;]$(cat ${{ github.workspace }}/after.json | jq '.id')"
          echo "##[set-output name=url;]$(cat ${{ github.workspace }}/after.json | jq '._links.graph_url.href')"
          echo "##[set-output name=time;]$(cat ${{ github.workspace }}/after.json | jq '.envelope.wt')"
          echo "##[set-output name=memory;]$(cat ${{ github.workspace }}/after.json | jq '.envelope.pmu')"
          echo "##[set-output name=queries;]$(cat ${{ github.workspace }}/after.json | jq '.arguments[.arguments | keys[0]][ .arguments[.arguments | keys[0]] | keys[0]].ct')"

      - name: Output Link
        run: echo "::warning::${{ steps.blackfire-profile-after.outputs.url}}"

      - name: Compare Results
        id: comparison
        run: |
          echo "##[set-output name=time;] $(echo 'Number(((${{steps.blackfire-profile-after.outputs.time}}-${{steps.blackfire-profile.outputs.time}})/${{steps.blackfire-profile.outputs.time}})*100).toFixed(2);' | node -p)"
          echo "##[set-output name=memory;] $(echo 'Number(((${{steps.blackfire-profile-after.outputs.memory}}-${{steps.blackfire-profile.outputs.memory}})/${{steps.blackfire-profile.outputs.memory}})*100).toFixed(2);' | node -p)"
          echo "##[set-output name=queries;] $(echo 'Number(((${{steps.blackfire-profile-after.outputs.queries}}-${{steps.blackfire-profile.outputs.queries}})/${{steps.blackfire-profile.outputs.queries}})*100).toFixed(2);' | node -p)"

      - name: Output Time
        run: echo "::warning::Time Difference ${{ steps.comparison.outputs.time}}%"

      - name: Output Memory
        run: echo "::warning::Memory Difference ${{ steps.comparison.outputs.memory}}%"

      - name: Output SQL Queries
        run: echo "::warning::Number of SQL Queries ${{ steps.comparison.outputs.queries}}%"

  static:
    name: M2 Coding Standard
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: extdn/github-actions-m2/magento-coding-standard@master

  phpmd:
    name: M2 Mess Detector
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: extdn/github-actions-m2/magento-mess-detector@master

  phpstan:
    name: M2 PhpStan
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: extdn/github-actions-m2/magento-phpstan@master

  integration:
    name: WIP Integration Tests
    runs-on: ubuntu-latest
    container:
      image: duhon/php:7.3-alpine

    services:
      mysql:
        image: mysql:5.7
        env:
          MYSQL_ROOT_PASSWORD: password
          MYSQL_DATABASE: magento2
        ports:
          - 3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3

    steps:
      - uses: actions/checkout@v2

      #- uses: extdn/github-actions-m2/install-m2-from-mirror@master
      #  with:
      #    ce-version: 2.3.3